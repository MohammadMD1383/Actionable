# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: nightly build

on:
  workflow_dispatch:

permissions: write-all

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - uses: actions/setup-python@v4
        with:
          python-version: 3.x
      
      - name: setup mkdocs
        run: |
          pip install mkdocs-material
          pip install mkdocs-file-filter-plugin
      
      - name: build offline docs
        run: |
          cd docs
          mkdocs build
        env:
          OFFLINE_DOCS: true
      
      - name: Make gradlew executable
        run: |
          chmod +x gradlew
        shell: bash
      
      - name: Create tag
        run: |
          echo "COMMIT=$(git rev-parse HEAD)" >> $GITHUB_ENV
          
          VERSION=$(grep -Eo 'version = "[0-9]+\.[0-9]+\.[0-9]+"' build.gradle.kts | sed 's/version = "//;s/"$//')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          
          TAG="nightly/$VERSION+$(git rev-parse --short HEAD)"
          echo "TAG=$TAG" >> $GITHUB_ENV
          
          sed -i 's#version = "[0-9]\+\.[0-9]\+\.[0-9]\+"#version = "'"$TAG"'".replace('"'/','-'"')#g' build.gradle.kts
        shell: bash
      
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: buildPlugin
      
      - name: Upload Nightly Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.TAG }}
          commit: ${{ env.COMMIT }}
          artifacts: "build/distributions/*.zip"
          token: ${{ secrets.GITHUB_TOKEN }}
          generateReleaseNotes: true
